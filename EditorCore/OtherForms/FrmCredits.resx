<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>